/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.j2eecn.mcat.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.StagedGroupedModel;
import com.liferay.portal.model.WorkflowedModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the MeAssetCat service. Represents a row in the &quot;MeAssetCat&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.j2eecn.mcat.model.impl.MeAssetCatModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.j2eecn.mcat.model.impl.MeAssetCatImpl}.
 * </p>
 *
 * @author Administrator
 * @see MeAssetCat
 * @see com.j2eecn.mcat.model.impl.MeAssetCatImpl
 * @see com.j2eecn.mcat.model.impl.MeAssetCatModelImpl
 * @generated
 */
public interface MeAssetCatModel extends BaseModel<MeAssetCat>,
	StagedGroupedModel, WorkflowedModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a me asset cat model instance should use the {@link MeAssetCat} interface instead.
	 */

	/**
	 * Returns the primary key of this me asset cat.
	 *
	 * @return the primary key of this me asset cat
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this me asset cat.
	 *
	 * @param primaryKey the primary key of this me asset cat
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this me asset cat.
	 *
	 * @return the uuid of this me asset cat
	 */
	@AutoEscape
	@Override
	public String getUuid();

	/**
	 * Sets the uuid of this me asset cat.
	 *
	 * @param uuid the uuid of this me asset cat
	 */
	@Override
	public void setUuid(String uuid);

	/**
	 * Returns the asset cat ID of this me asset cat.
	 *
	 * @return the asset cat ID of this me asset cat
	 */
	public long getAssetCatId();

	/**
	 * Sets the asset cat ID of this me asset cat.
	 *
	 * @param assetCatId the asset cat ID of this me asset cat
	 */
	public void setAssetCatId(long assetCatId);

	/**
	 * Returns the group ID of this me asset cat.
	 *
	 * @return the group ID of this me asset cat
	 */
	@Override
	public long getGroupId();

	/**
	 * Sets the group ID of this me asset cat.
	 *
	 * @param groupId the group ID of this me asset cat
	 */
	@Override
	public void setGroupId(long groupId);

	/**
	 * Returns the company ID of this me asset cat.
	 *
	 * @return the company ID of this me asset cat
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this me asset cat.
	 *
	 * @param companyId the company ID of this me asset cat
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the user ID of this me asset cat.
	 *
	 * @return the user ID of this me asset cat
	 */
	@Override
	public long getUserId();

	/**
	 * Sets the user ID of this me asset cat.
	 *
	 * @param userId the user ID of this me asset cat
	 */
	@Override
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this me asset cat.
	 *
	 * @return the user uuid of this me asset cat
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public String getUserUuid() throws SystemException;

	/**
	 * Sets the user uuid of this me asset cat.
	 *
	 * @param userUuid the user uuid of this me asset cat
	 */
	@Override
	public void setUserUuid(String userUuid);

	/**
	 * Returns the user name of this me asset cat.
	 *
	 * @return the user name of this me asset cat
	 */
	@AutoEscape
	@Override
	public String getUserName();

	/**
	 * Sets the user name of this me asset cat.
	 *
	 * @param userName the user name of this me asset cat
	 */
	@Override
	public void setUserName(String userName);

	/**
	 * Returns the create date of this me asset cat.
	 *
	 * @return the create date of this me asset cat
	 */
	@Override
	public Date getCreateDate();

	/**
	 * Sets the create date of this me asset cat.
	 *
	 * @param createDate the create date of this me asset cat
	 */
	@Override
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this me asset cat.
	 *
	 * @return the modified date of this me asset cat
	 */
	@Override
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this me asset cat.
	 *
	 * @param modifiedDate the modified date of this me asset cat
	 */
	@Override
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the status of this me asset cat.
	 *
	 * @return the status of this me asset cat
	 */
	@Override
	public int getStatus();

	/**
	 * Sets the status of this me asset cat.
	 *
	 * @param status the status of this me asset cat
	 */
	@Override
	public void setStatus(int status);

	/**
	 * Returns the status by user ID of this me asset cat.
	 *
	 * @return the status by user ID of this me asset cat
	 */
	@Override
	public long getStatusByUserId();

	/**
	 * Sets the status by user ID of this me asset cat.
	 *
	 * @param statusByUserId the status by user ID of this me asset cat
	 */
	@Override
	public void setStatusByUserId(long statusByUserId);

	/**
	 * Returns the status by user uuid of this me asset cat.
	 *
	 * @return the status by user uuid of this me asset cat
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public String getStatusByUserUuid() throws SystemException;

	/**
	 * Sets the status by user uuid of this me asset cat.
	 *
	 * @param statusByUserUuid the status by user uuid of this me asset cat
	 */
	@Override
	public void setStatusByUserUuid(String statusByUserUuid);

	/**
	 * Returns the status by user name of this me asset cat.
	 *
	 * @return the status by user name of this me asset cat
	 */
	@AutoEscape
	@Override
	public String getStatusByUserName();

	/**
	 * Sets the status by user name of this me asset cat.
	 *
	 * @param statusByUserName the status by user name of this me asset cat
	 */
	@Override
	public void setStatusByUserName(String statusByUserName);

	/**
	 * Returns the status date of this me asset cat.
	 *
	 * @return the status date of this me asset cat
	 */
	@Override
	public Date getStatusDate();

	/**
	 * Sets the status date of this me asset cat.
	 *
	 * @param statusDate the status date of this me asset cat
	 */
	@Override
	public void setStatusDate(Date statusDate);

	/**
	 * Returns the name of this me asset cat.
	 *
	 * @return the name of this me asset cat
	 */
	@AutoEscape
	public String getName();

	/**
	 * Sets the name of this me asset cat.
	 *
	 * @param name the name of this me asset cat
	 */
	public void setName(String name);

	/**
	 * Returns the desc of this me asset cat.
	 *
	 * @return the desc of this me asset cat
	 */
	@AutoEscape
	public String getDesc();

	/**
	 * Sets the desc of this me asset cat.
	 *
	 * @param desc the desc of this me asset cat
	 */
	public void setDesc(String desc);

	/**
	 * Returns the use status of this me asset cat.
	 *
	 * @return the use status of this me asset cat
	 */
	public int getUseStatus();

	/**
	 * Sets the use status of this me asset cat.
	 *
	 * @param useStatus the use status of this me asset cat
	 */
	public void setUseStatus(int useStatus);

	/**
	 * Returns the code of this me asset cat.
	 *
	 * @return the code of this me asset cat
	 */
	@AutoEscape
	public String getCode();

	/**
	 * Sets the code of this me asset cat.
	 *
	 * @param code the code of this me asset cat
	 */
	public void setCode(String code);

	/**
	 * Returns the mng ID of this me asset cat.
	 *
	 * @return the mng ID of this me asset cat
	 */
	public long getMngId();

	/**
	 * Sets the mng ID of this me asset cat.
	 *
	 * @param mngId the mng ID of this me asset cat
	 */
	public void setMngId(long mngId);

	/**
	 * Returns the mng name of this me asset cat.
	 *
	 * @return the mng name of this me asset cat
	 */
	public long getMngName();

	/**
	 * Sets the mng name of this me asset cat.
	 *
	 * @param mngName the mng name of this me asset cat
	 */
	public void setMngName(long mngName);

	/**
	 * Returns the code and name of this me asset cat.
	 *
	 * @return the code and name of this me asset cat
	 */
	@AutoEscape
	public String getCodeAndName();

	/**
	 * Sets the code and name of this me asset cat.
	 *
	 * @param codeAndName the code and name of this me asset cat
	 */
	public void setCodeAndName(String codeAndName);

	/**
	 * @deprecated As of 6.1.0, replaced by {@link #isApproved()}
	 */
	@Override
	public boolean getApproved();

	/**
	 * Returns <code>true</code> if this me asset cat is approved.
	 *
	 * @return <code>true</code> if this me asset cat is approved; <code>false</code> otherwise
	 */
	@Override
	public boolean isApproved();

	/**
	 * Returns <code>true</code> if this me asset cat is denied.
	 *
	 * @return <code>true</code> if this me asset cat is denied; <code>false</code> otherwise
	 */
	@Override
	public boolean isDenied();

	/**
	 * Returns <code>true</code> if this me asset cat is a draft.
	 *
	 * @return <code>true</code> if this me asset cat is a draft; <code>false</code> otherwise
	 */
	@Override
	public boolean isDraft();

	/**
	 * Returns <code>true</code> if this me asset cat is expired.
	 *
	 * @return <code>true</code> if this me asset cat is expired; <code>false</code> otherwise
	 */
	@Override
	public boolean isExpired();

	/**
	 * Returns <code>true</code> if this me asset cat is inactive.
	 *
	 * @return <code>true</code> if this me asset cat is inactive; <code>false</code> otherwise
	 */
	@Override
	public boolean isInactive();

	/**
	 * Returns <code>true</code> if this me asset cat is incomplete.
	 *
	 * @return <code>true</code> if this me asset cat is incomplete; <code>false</code> otherwise
	 */
	@Override
	public boolean isIncomplete();

	/**
	 * Returns <code>true</code> if this me asset cat is pending.
	 *
	 * @return <code>true</code> if this me asset cat is pending; <code>false</code> otherwise
	 */
	@Override
	public boolean isPending();

	/**
	 * Returns <code>true</code> if this me asset cat is scheduled.
	 *
	 * @return <code>true</code> if this me asset cat is scheduled; <code>false</code> otherwise
	 */
	@Override
	public boolean isScheduled();

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(com.j2eecn.mcat.model.MeAssetCat meAssetCat);

	@Override
	public int hashCode();

	@Override
	public CacheModel<com.j2eecn.mcat.model.MeAssetCat> toCacheModel();

	@Override
	public com.j2eecn.mcat.model.MeAssetCat toEscapedModel();

	@Override
	public com.j2eecn.mcat.model.MeAssetCat toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}